// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Language {
  id   Int    @id @default(autoincrement())
  name String @unique

  categoryTranslations CategoryTranslation[]
  productTranslations  ProductTranslation[]
}

model ProductTranslation {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  languageId  Int
  productId   Int

  product  Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  language Language @relation(fields: [languageId], references: [id], onDelete: Cascade)

  @@unique([productId, languageId])
}

model Product {
  id         Int      @id @default(autoincrement())
  categoryId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  category     Category             @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  images       String
  translations ProductTranslation[]
}

model Admin {
  id            Int      @id @default(autoincrement())
  name          String
  email         String   @unique
  password      String
  is_creator    Boolean  @default(true)
  refresh_token String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model User {
  id              Int      @id @default(autoincrement())
  name            String
  email           String   @unique
  password        String
  refresh_token   String?
  activation_link String?
  is_active       Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Category {
  id           Int                   @id @default(autoincrement())
  createdAt    DateTime              @default(now())
  updatedAt    DateTime              @updatedAt
  translations CategoryTranslation[]
  products     Product[]
  logo         String?
}

model CategoryTranslation {
  id         Int    @id @default(autoincrement())
  name       String
  languageId Int
  categoryId Int

  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  language Language @relation(fields: [languageId], references: [id], onDelete: Cascade)

  @@unique([categoryId, languageId])
}

